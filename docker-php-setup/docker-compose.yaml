version: '3.8'
services:
  server:
    # image: 'nginx:stable-alpine'
    build:
      #use this setup if there is a need for copy
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - '8080:80'
    volumes:
      - ./src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - mysql
  php:
    build: 
      context: .
      dockerfile: dockerfiles/php.dockerfile
    #delegated prevents instantly update process but will be delegated
    # volumes:
    #   - './src:/var/www/html:delegated'
    
  mysql:
    image: mysql:5.7
    env_file:
      - ./env/mysql.env
  composer:
    build: 
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - './src:/var/www/html'
  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
  npm:
    image: node:14
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes:
      - ./src:/var/www/html

#create-project laravel/laravel {directory} 4.2 --prefer-dist
#force docker-compose to rebuild when caches are detected
#docker-compose -d --build up container_name